: TYPE-TEST
	:TESTLOOP
			KEY C-EMIT
	GOTO TESTLOOP
;

: 0BUFFER
	0
	:ZBUFFLOOP
		DUP STRBUF +
		0 SWAP C!
		1 +
	DUP 128 = ZGOTO ZBUFFLOOP
	DROP
;

: PREPARE-BUFFER
	STRBUF 1 +
	:PREPARELOOP
		DUP C@ 32 = ZGOTO NOTREPLACE
		DUP 0 SWAP C!
	:NOTREPLACE
		1 +
		DUP 127 STRBUF + = ZGOTO PREPARELOOP
	:ENDPREPARELOOP
		DROP
	
	65 STRBUF C!
	0 STRBUF 1 + C!
;

: 1+! DUP @ 1 + SWAP ! ;
: 1-! DUP @ 1 - SWAP ! ;

: STR<< STRBUF 2 + STRPOS ! ;
: STR> STRPOS 1+! ;
: STR< STRPOS 1-! ;

: STR, STRPOS @ C! STR> ;

: CALC-RIGHTBOUND 79 CURSOR-X - STRPOS @ + RIGHTBOUND ! ;
	
: SENTENCE
	0BUFFER
	STR<<
	CALC-RIGHTBOUND

	:SENTENCE_LOOP
		KEY
		DUP 8 = ZGOTO NOTBSSENTENCE
		STRBUF 2 + STRPOS @ = NZGOTO BSFARLEFT
		0 STRPOS @ C! STR<
		C-EMIT
		GOTO SENTENCE_LOOP
	:BSFARLEFT
		DROP
		GOTO SENTENCE_LOOP
	:NOTBSSENTENCE
		DUP 13 = ZGOTO NOTCRSENTENCE
		C-EMIT
		GOTO END_SENTENCE
	:NOTCRSENTENCE
		STRPOS @ RIGHTBOUND @ = ZGOTO NOTFARRIGHT
		DROP
		GOTO SENTENCE_LOOP
	:NOTFARRIGHT
		DUP C-EMIT STR,
		GOTO SENTENCE_LOOP
	:END_SENTENCE
	
	STRBUF
;

: FIND
	TARGET !
	LAST

	:FINDLOOP
		@ DUP 
		ZGOTO ENDFINDLOOP
		DUP WS + TARGET @ STRCMP NZGOTO ENDFINDLOOP
		GOTO FINDLOOP
	:ENDFINDLOOP
;

: >CFA WS + DUP STRLEN + 1 + ;

: SHIFT-STRING-BUFFER
	0
	:SHIFTSTRINGLOOP
		DUP DUP
		STRBUF + C@ SWAP STRBUF + 1 - C!
		1 +
		DUP 127 = ZGOTO SHIFTSTRINGLOOP
	:ENDSHIFTSTRING
		DROP
		0 STRBUF 127 + C!
;

: WORD
	STRBUF STRLEN
	:NEXTSPACE
		SHIFT-STRING-BUFFER
		1 -
		DUP NZGOTO NEXTSPACE
	:ENDNEXTSPACE
		DROP

	5
	:WORDLOOP
		SHIFT-STRING-BUFFER
		STRBUF C@ NZGOTO WORDSUCCESS
		1 -
		DUP NZGOTO WORDLOOP
	:ENDWORDLOOP
		GOTO WORDFAIL

	:WORDSUCCESS
		DROP STRBUF
		GOTO ENDWORD
	:WORDFAIL
		DROP 0
		GOTO ENDWORD
	:ENDWORD
;

: HEX?
	DUP 65 >= SWAP DUP 70 <= SWAP ROT AND SWAP
	DUP 48 >= SWAP 57 <= AND OR ZGOTO NOTHEX
	1 GOTO ENDISHEX
	:NOTHEX
		0
	:ENDISHEX
;

: C-TO-NUM
	DUP 65 >= NZGOTO ISALPHA
	49 - 1 +
	GOTO ENDCTONUM
	
	:ISALPHA
		65 - 10 +
	
	:ENDCTONUM
;

: NUMBER
	0 TARGET !
	
	0
	:STRINGTONUMLOOP
		TARGET @ 4 LSHIFT TARGET !
		DUP STRBUF + C@ C-TO-NUM
		TARGET @ + TARGET !
		1 +
		DUP 4 < NZGOTO STRINGTONUMLOOP
	:ENDSTRINGTONUMLOOP
		DROP
		TARGET @
;

: NUMBER?
	4 STRBUF STRLEN 4 = ZGOTO NOTNUMBER
	:ISNUMBERLOOP
		DUP STRBUF + 1 - C@ HEX? ZGOTO NOTNUMBER
		1 -
		DUP NZGOTO ISNUMBERLOOP
	:ENDISNUMBERLOOP
		DROP 1
		GOTO ENDISNUMBER

	:NOTNUMBER
		DROP 0
		GOTO ENDISNUMBER

	:ENDISNUMBER
;


: ERROR ERRSTR .S CR ;

: SIMPLE-SHELL
	:STARTSIMPLESHELL
		CR
		SP . 62 EMIT SPC
		SENTENCE DROP
		PREPARE-BUFFER
	:SIMPLESHELLLOOP
		WORD
		ZGOTO STARTSIMPLESHELL
		STRBUF
		DUP FIND
		DUP ZGOTO SSHELLNUMBERTEST
		SWAP DROP
		>CFA EXEC
		GOTO SIMPLESHELLLOOP
	:SSHELLNUMBERTEST
		DROP
		DUP NUMBER? NZGOTO SSHELLNUMBER
		DROP ERROR GOTO STARTSIMPLESHELL
	:SSHELLNUMBER
		DROP DROP NUMBER
		GOTO SIMPLESHELLLOOP
;

: SHELL
	:STARTSHELL
		CR
		SP STACK-BASE - . 62 EMIT SPC
		SENTENCE DROP
		PREPARE-BUFFER
	:SHELLLOOP
		STATE @ NZGOTO STATESHELL
		WORD
		ZGOTO STARTSHELL
		STRBUF
		DUP FIND
		DUP ZGOTO SHELLNUMBERTEST
		SWAP DROP
		>CFA EXEC
		GOTO SHELLLOOP
	:SHELLNUMBERTEST
		DROP
		DUP NUMBER? NZGOTO SHELLNUMBER
		DROP ERROR GOTO STARTSHELL
	:SHELLNUMBER
		DROP DROP NUMBER
		GOTO SHELLLOOP

	:STATESHELL
		WORD
		ZGOTO STARTSHELL
		STRBUF DUP C@ 58 = NZGOTO ISIMM
		DUP FIND
		DUP ZGOTO SHELLNUMBERTESTSTATE
		SWAP DROP
		WRITECALL
		>CFA ,
		0 ,
		GOTO SHELLLOOP
	:SHELLNUMBERTESTSTATE
		DROP
		DUP NUMBER? NZGOTO SHELLNUMBERSTATE
		DROP ERROR GOTO STARTSHELL
	:SHELLNUMBERSTATE
		DROP DROP NUMBER 
		WRITEPUSH ,
		WRITECALL GETFIX , 0 ,
		GOTO SHELLLOOP
	:ISIMM
		DUP FIND
		DUP ZGOTO IMMFAIL
		SWAP DROP
		>CFA EXEC
		GOTO SHELLLOOP
	:IMMFAIL
		DROP ERROR GOTO STARTSHELL
;

: CREATE HERE @ LAST @ , WORD STRSAVE LAST ! ;
: : CREATE 1 STATE ! ;
: :; 203 C, 0 STATE ! ;

