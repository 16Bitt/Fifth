{ DUP
T FPOP AX
NT FPUSH AX
NT FPUSH AX }

{ 2DUP
T FPOP BX
NT FPOP CX

NT FPUSH CX
NT FPUSH BX
NT FPUSH CX
NT FPUSH BX }

{ ROT
T FPOP DX
NT FPOP CX
NT FPOP BX
NT FPUSH DX
NT FPUSH CX
NT FPUSH BX }

{ DROP
T FPOP AX }

{ SWAP
T FPOP AX
NT FPOP BX
NT FPUSH AX
NT FPUSH BX }

{ HANG
T CLI
NT HLT }

{ NOP
T NOP }

{ +
T FPOP AX
NT FPOP BX
NT ADD AX, BX
NT FPUSH AX }

{ -
T FPOP BX
NT FPOP AX
NT SUB AX, BX
NT FPUSH AX }

{ *
T FPOP AX
NT FPOP BX
NT IMUL AX, BX
NT FPUSH AX }

{ /
T FPOP BX
NT FPOP AX
NT IDIV BX
NT FPUSH AX }

{ /%
T FPOP BX
NT FPOP AX
NT IDIV BX
NT XOR BX, BX
NT MOV BL, DL
NT FPUSH AX
NT FPUSH BX }

{ AND
T FPOP BX
NT FPOP AX
NT AND AX, BX
NT FPUSH AX }

{ XOR
T FPOP BX
NT FPOP AX
NT XOR AX, BX
NT FPUSH AX }

{ OR
T FPOP BX
NT FPOP AX
NT OR AX, BX
NT FPUSH AX }

{ LSHIFT
T FPOP CX
NT FPOP AX
NT SHL AX, CL
NT FPUSH AX }

{ RSHIFT
T FPOP CX
NT FPOP AX
NT SHR AX, CL
NT FPUSH AX }

{ INV
T FPOP AX
NT OR AX, AX
NT JNZ INVWORDZ

NT MOV AX, 1
NT FPUSH AX
NT NEXT

N INVWORDZ:
NT XOR AX, AX
NT FPUSH AX }

{ EXEC
T FPOP AX
NT MOV WORD [CALL_LOC], AX
NT DB 154
N CALL_LOC: DW 0
NT DW 0 }

{ FIX
N FIXLOC:
NT FPUSH AX }

{ GETFIX
T MOV AX, FIXLOC
NT FPUSH AX }

: PUSHVAL 184 ;
: CALLVAL 154 ;

